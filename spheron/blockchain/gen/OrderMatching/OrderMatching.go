// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package OrderMatching

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// OrderMatchingCPU is an auto generated low-level Go binding around an user-defined struct.
type OrderMatchingCPU struct {
	Units      int64
	Attributes []string
}

// OrderMatchingEndpoints is an auto generated low-level Go binding around an user-defined struct.
type OrderMatchingEndpoints struct {
	Kind           int32
	SequenceNumber int32
}

// OrderMatchingGPU is an auto generated low-level Go binding around an user-defined struct.
type OrderMatchingGPU struct {
	Units      int64
	Attributes []string
}

// OrderMatchingRam is an auto generated low-level Go binding around an user-defined struct.
type OrderMatchingRam struct {
	Units      int64
	Attributes []string
}

// OrderMatchingResourceAttributes is an auto generated low-level Go binding around an user-defined struct.
type OrderMatchingResourceAttributes struct {
	CpuUnits                int64
	CpuAttributes           []string
	RamUnits                int64
	RamAttributes           []string
	Volume                  OrderMatchingVolume
	GpuUnits                int64
	GpuAttributes           []string
	EndpointsKind           int32
	EndpointsSequenceNumber int32
}

// OrderMatchingResources is an auto generated low-level Go binding around an user-defined struct.
type OrderMatchingResources struct {
	Cpu       OrderMatchingCPU
	Ram       OrderMatchingRam
	Volume    OrderMatchingVolume
	Gpu       OrderMatchingGPU
	Endpoints OrderMatchingEndpoints
}

// OrderMatchingSPECS is an auto generated low-level Go binding around an user-defined struct.
type OrderMatchingSPECS struct {
	PlacementsRequirement []common.Address
	Resource              OrderMatchingResources
	ReplicaCount          int32
}

// OrderMatchingVolume is an auto generated low-level Go binding around an user-defined struct.
type OrderMatchingVolume struct {
	Name       string
	Units      int64
	Attributes []string
}

// OrderMatchingMetaData contains all meta data concerning the OrderMatching contract.
var OrderMatchingMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nodeProviderRegistryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_authorizedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAuthorizedAddress\",\"type\":\"address\"}],\"name\":\"AuthorizedAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"orderId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"name\":\"BidPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"orderId\",\"type\":\"uint64\"}],\"name\":\"OrderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"orderId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"providerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"providerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"acceptedPrice\",\"type\":\"uint256\"}],\"name\":\"OrderMatched\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"authorizedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bids\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"orderId\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"bidPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_region\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"_uptime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_reputation\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_slashes\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"_maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_token\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_placementsRequirement\",\"type\":\"address[]\"},{\"internalType\":\"int32\",\"name\":\"_replicaCount\",\"type\":\"int32\"},{\"internalType\":\"string\",\"name\":\"_version\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"cpuUnits\",\"type\":\"int64\"},{\"internalType\":\"string[]\",\"name\":\"cpuAttributes\",\"type\":\"string[]\"},{\"internalType\":\"int64\",\"name\":\"ramUnits\",\"type\":\"int64\"},{\"internalType\":\"string[]\",\"name\":\"ramAttributes\",\"type\":\"string[]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int64\",\"name\":\"units\",\"type\":\"int64\"},{\"internalType\":\"string[]\",\"name\":\"attributes\",\"type\":\"string[]\"}],\"internalType\":\"structOrderMatching.Volume\",\"name\":\"volume\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"gpuUnits\",\"type\":\"int64\"},{\"internalType\":\"string[]\",\"name\":\"gpuAttributes\",\"type\":\"string[]\"},{\"internalType\":\"int32\",\"name\":\"endpointsKind\",\"type\":\"int32\"},{\"internalType\":\"int32\",\"name\":\"endpointsSequenceNumber\",\"type\":\"int32\"}],\"internalType\":\"structOrderMatching.ResourceAttributes\",\"name\":\"_resourceAttributes\",\"type\":\"tuple\"}],\"name\":\"createOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_orderId\",\"type\":\"uint64\"}],\"name\":\"getResourceAttributes\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"cpuUnits\",\"type\":\"int64\"},{\"internalType\":\"string[]\",\"name\":\"cpuAttributes\",\"type\":\"string[]\"},{\"internalType\":\"int64\",\"name\":\"ramUnits\",\"type\":\"int64\"},{\"internalType\":\"string[]\",\"name\":\"ramAttributes\",\"type\":\"string[]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int64\",\"name\":\"units\",\"type\":\"int64\"},{\"internalType\":\"string[]\",\"name\":\"attributes\",\"type\":\"string[]\"}],\"internalType\":\"structOrderMatching.Volume\",\"name\":\"volume\",\"type\":\"tuple\"},{\"internalType\":\"int64\",\"name\":\"gpuUnits\",\"type\":\"int64\"},{\"internalType\":\"string[]\",\"name\":\"gpuAttributes\",\"type\":\"string[]\"},{\"internalType\":\"int32\",\"name\":\"endpointsKind\",\"type\":\"int32\"},{\"internalType\":\"int32\",\"name\":\"endpointsSequenceNumber\",\"type\":\"int32\"}],\"internalType\":\"structOrderMatching.ResourceAttributes\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_orderId\",\"type\":\"uint64\"}],\"name\":\"getVolume\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int64\",\"name\":\"units\",\"type\":\"int64\"},{\"internalType\":\"string[]\",\"name\":\"attributes\",\"type\":\"string[]\"}],\"internalType\":\"structOrderMatching.Volume\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_orderId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_providerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_acceptedPrice\",\"type\":\"uint256\"}],\"name\":\"matchOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"matchedOrders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"providerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"providerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"acceptedPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nodeProviderRegistry\",\"outputs\":[{\"internalType\":\"contractINodeProviderRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"id\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"region\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"uptime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"reputation\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"slashes\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"token\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"enumOrderMatching.State\",\"name\":\"state\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"placementsRequirement\",\"type\":\"address[]\"},{\"components\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"units\",\"type\":\"int64\"},{\"internalType\":\"string[]\",\"name\":\"attributes\",\"type\":\"string[]\"}],\"internalType\":\"structOrderMatching.CPU\",\"name\":\"cpu\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"units\",\"type\":\"int64\"},{\"internalType\":\"string[]\",\"name\":\"attributes\",\"type\":\"string[]\"}],\"internalType\":\"structOrderMatching.Ram\",\"name\":\"ram\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int64\",\"name\":\"units\",\"type\":\"int64\"},{\"internalType\":\"string[]\",\"name\":\"attributes\",\"type\":\"string[]\"}],\"internalType\":\"structOrderMatching.Volume\",\"name\":\"volume\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"units\",\"type\":\"int64\"},{\"internalType\":\"string[]\",\"name\":\"attributes\",\"type\":\"string[]\"}],\"internalType\":\"structOrderMatching.GPU\",\"name\":\"gpu\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int32\",\"name\":\"kind\",\"type\":\"int32\"},{\"internalType\":\"int32\",\"name\":\"sequenceNumber\",\"type\":\"int32\"}],\"internalType\":\"structOrderMatching.Endpoints\",\"name\":\"endpoints\",\"type\":\"tuple\"}],\"internalType\":\"structOrderMatching.Resources\",\"name\":\"resource\",\"type\":\"tuple\"},{\"internalType\":\"int32\",\"name\":\"replicaCount\",\"type\":\"int32\"}],\"internalType\":\"structOrderMatching.SPECS\",\"name\":\"specs\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"creationBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_orderId\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"_bidPrice\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAuthorizedAddress\",\"type\":\"address\"}],\"name\":\"updateAuthorizedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x608060405260015f806101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550348015610037575f80fd5b50604051613b8b380380613b8b8339818101604052810190610059919061017e565b3360055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506101bc565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61014d82610124565b9050919050565b61015d81610143565b8114610167575f80fd5b50565b5f8151905061017881610154565b92915050565b5f806040838503121561019457610193610120565b5b5f6101a18582860161016a565b92505060206101b28582860161016a565b9150509250929050565b6139c2806101c95f395ff3fe608060405234801561000f575f80fd5b50600436106100b2575f3560e01c80636582972e1161006f5780636582972e146101a05780637e1532d2146101be5780638da5cb5b146101da578063a469dffa146101f8578063b965911914610233578063fd2e5a2314610263576100b2565b806328d389bc146100b65780633975e614146100d257806347d4f8f2146101045780634fd2edbb146101365780635539d4001461015257806361f3726c14610170575b5f80fd5b6100d060048036038101906100cb91906120b4565b61027f565b005b6100ec60048036038101906100e7919061211c565b610388565b6040516100fb9392919061216e565b60405180910390f35b61011e600480360381019061011991906121cd565b6103cd565b60405161012d9392919061221a565b60405180910390f35b610150600480360381019061014b919061224f565b61043f565b005b61015a61081d565b604051610167919061229f565b60405180910390f35b61018a6004803603810190610185919061211c565b610842565b6040516101979190612452565b60405180910390f35b6101a8610a03565b6040516101b591906124cd565b60405180910390f35b6101d860048036038101906101d39190612a02565b610a28565b005b6101e2610e57565b6040516101ef919061229f565b60405180910390f35b610212600480360381019061020d919061211c565b610e7c565b60405161022a9c9b9a99989796959493929190612ef3565b60405180910390f35b61024d6004803603810190610248919061211c565b61168e565b60405161025a919061309e565b60405180910390f35b61027d600480360381019061027891906121cd565b611b69565b005b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461030e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103059061312e565b60405180910390fd5b8060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fe12f594f8990d16225e1238de64b5ef16fbe78fbb1a70f64e3a82274e9554c0a8160405161037d919061229f565b60405180910390a150565b6003602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b6002602052815f5260405f2081815481106103e6575f80fd5b905f5260205f2090600302015f9150915050805f015f9054906101000a900467ffffffffffffffff1690806001015490806002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c5906131bc565b60405180910390fd5b5f60015f8567ffffffffffffffff1667ffffffffffffffff1681526020019081526020015f205f015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1603610554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054b90613224565b60405180910390fd5b5f600181111561056757610566612baf565b5b60015f8567ffffffffffffffff1667ffffffffffffffff1681526020019081526020015f2060050160149054906101000a900460ff1660018111156105af576105ae612baf565b5b146105ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e69061328c565b60405180910390fd5b5f8060075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166368efbce3856040518263ffffffff1660e01b815260040161064b919061229f565b5f60405180830381865afa158015610665573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f8201168201806040525081019061068d9190613375565b935050509150806106d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ca90613465565b60405180910390fd5b5f60405180606001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018581525090508060035f8867ffffffffffffffff1667ffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201559050506001805f8867ffffffffffffffff1667ffffffffffffffff1681526020019081526020015f2060050160146101000a81548160ff021916908360018111156107d3576107d2612baf565b5b02179055507ff50b3cb342f0081a2c26e7b8816717154b65d850ef73d68a185a3613c719f7b48686858760405161080d9493929190613483565b60405180910390a1505050505050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61084a611e71565b60045f8367ffffffffffffffff1667ffffffffffffffff1681526020019081526020015f206004016040518060600160405290815f8201805461088c906134f3565b80601f01602080910402602001604051908101604052809291908181526020018280546108b8906134f3565b80156109035780601f106108da57610100808354040283529160200191610903565b820191905f5260205f20905b8154815290600101906020018083116108e657829003601f168201915b50505050508152602001600182015f9054906101000a900460070b60070b60070b815260200160028201805480602002602001604051908101604052809291908181526020015f905b828210156109f4578382905f5260205f20018054610969906134f3565b80601f0160208091040260200160405190810160405280929190818152602001828054610995906134f3565b80156109e05780601f106109b7576101008083540402835291602001916109e0565b820191905f5260205f20905b8154815290600101906020018083116109c357829003601f168201915b50505050508152602001906001019061094c565b50505050815250509050919050565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f81819054906101000a900467ffffffffffffffff1680929190610a4d90613550565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555090505f60015f8367ffffffffffffffff1667ffffffffffffffff1681526020019081526020015f20905081815f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508b816001019081610ad79190613713565b508a816002015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550898160020160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550888160020160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555087816003018190555086816004019081610b729190613713565b5033816005015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f8160050160146101000a81548160ff02191690836001811115610bdc57610bdb612baf565b5b021790555085816006015f019080519060200190610bfb929190611e94565b508481600601600b015f6101000a81548163ffffffff021916908360030b63ffffffff16021790555083816012019081610c359190613713565b504381601301819055505f60045f8467ffffffffffffffff1667ffffffffffffffff1681526020019081526020015f209050835f0151815f015f6101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff1602179055508360200151816001019080519060200190610cb2929190611f1b565b508360400151816002015f6101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff1602179055508360600151816003019080519060200190610d00929190611f1b565b508360800151816004015f820151815f019081610d1d9190613713565b506020820151816001015f6101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff1602179055506040820151816002019080519060200190610d6b929190611f1b565b509050508360a00151816007015f6101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff1602179055508360c00151816008019080519060200190610dbc929190611f1b565b508360e00151816009015f6101000a81548163ffffffff021916908360030b63ffffffff1602179055508361010001518160090160046101000a81548163ffffffff021916908360030b63ffffffff1602179055507fedcc895bbb0933b024b35f376f6d52ad824c61c10d6c463841fc61daf47e37de83604051610e4091906137e2565b60405180910390a150505050505050505050505050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001602052805f5260405f205f91509050805f015f9054906101000a900467ffffffffffffffff1690806001018054610eb4906134f3565b80601f0160208091040260200160405190810160405280929190818152602001828054610ee0906134f3565b8015610f2b5780601f10610f0257610100808354040283529160200191610f2b565b820191905f5260205f20905b815481529060010190602001808311610f0e57829003601f168201915b505050505090806002015f9054906101000a900467ffffffffffffffff16908060020160089054906101000a900467ffffffffffffffff16908060020160109054906101000a900467ffffffffffffffff1690806003015490806004018054610f93906134f3565b80601f0160208091040260200160405190810160405280929190818152602001828054610fbf906134f3565b801561100a5780601f10610fe15761010080835404028352916020019161100a565b820191905f5260205f20905b815481529060010190602001808311610fed57829003601f168201915b505050505090806005015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160149054906101000a900460ff1690806006016040518060600160405290815f82018054806020026020016040519081016040528092919081815260200182805480156110d857602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161108f575b50505050508152602001600182016040518060a00160405290815f82016040518060400160405290815f82015f9054906101000a900460070b60070b60070b815260200160018201805480602002602001604051908101604052809291908181526020015f905b828210156111e7578382905f5260205f2001805461115c906134f3565b80601f0160208091040260200160405190810160405280929190818152602001828054611188906134f3565b80156111d35780601f106111aa576101008083540402835291602001916111d3565b820191905f5260205f20905b8154815290600101906020018083116111b657829003601f168201915b50505050508152602001906001019061113f565b50505050815250508152602001600282016040518060400160405290815f82015f9054906101000a900460070b60070b60070b815260200160018201805480602002602001604051908101604052809291908181526020015f905b828210156112ea578382905f5260205f2001805461125f906134f3565b80601f016020809104026020016040519081016040528092919081815260200182805461128b906134f3565b80156112d65780601f106112ad576101008083540402835291602001916112d6565b820191905f5260205f20905b8154815290600101906020018083116112b957829003601f168201915b505050505081526020019060010190611242565b50505050815250508152602001600482016040518060600160405290815f82018054611315906134f3565b80601f0160208091040260200160405190810160405280929190818152602001828054611341906134f3565b801561138c5780601f106113635761010080835404028352916020019161138c565b820191905f5260205f20905b81548152906001019060200180831161136f57829003601f168201915b50505050508152602001600182015f9054906101000a900460070b60070b60070b815260200160028201805480602002602001604051908101604052809291908181526020015f905b8282101561147d578382905f5260205f200180546113f2906134f3565b80601f016020809104026020016040519081016040528092919081815260200182805461141e906134f3565b80156114695780601f1061144057610100808354040283529160200191611469565b820191905f5260205f20905b81548152906001019060200180831161144c57829003601f168201915b5050505050815260200190600101906113d5565b50505050815250508152602001600782016040518060400160405290815f82015f9054906101000a900460070b60070b60070b815260200160018201805480602002602001604051908101604052809291908181526020015f905b82821015611580578382905f5260205f200180546114f5906134f3565b80601f0160208091040260200160405190810160405280929190818152602001828054611521906134f3565b801561156c5780601f106115435761010080835404028352916020019161156c565b820191905f5260205f20905b81548152906001019060200180831161154f57829003601f168201915b5050505050815260200190600101906114d8565b50505050815250508152602001600982016040518060400160405290815f82015f9054906101000a900460030b60030b60030b81526020015f820160049054906101000a900460030b60030b60030b81525050815250508152602001600b82015f9054906101000a900460030b60030b60030b8152505090806012018054611607906134f3565b80601f0160208091040260200160405190810160405280929190818152602001828054611633906134f3565b801561167e5780601f106116555761010080835404028352916020019161167e565b820191905f5260205f20905b81548152906001019060200180831161166157829003601f168201915b505050505090806013015490508c565b611696611f72565b60045f8367ffffffffffffffff1667ffffffffffffffff1681526020019081526020015f20604051806101200160405290815f82015f9054906101000a900460070b60070b60070b815260200160018201805480602002602001604051908101604052809291908181526020015f905b828210156117ae578382905f5260205f20018054611723906134f3565b80601f016020809104026020016040519081016040528092919081815260200182805461174f906134f3565b801561179a5780601f106117715761010080835404028352916020019161179a565b820191905f5260205f20905b81548152906001019060200180831161177d57829003601f168201915b505050505081526020019060010190611706565b505050508152602001600282015f9054906101000a900460070b60070b60070b815260200160038201805480602002602001604051908101604052809291908181526020015f905b8282101561189e578382905f5260205f20018054611813906134f3565b80601f016020809104026020016040519081016040528092919081815260200182805461183f906134f3565b801561188a5780601f106118615761010080835404028352916020019161188a565b820191905f5260205f20905b81548152906001019060200180831161186d57829003601f168201915b5050505050815260200190600101906117f6565b505050508152602001600482016040518060600160405290815f820180546118c5906134f3565b80601f01602080910402602001604051908101604052809291908181526020018280546118f1906134f3565b801561193c5780601f106119135761010080835404028352916020019161193c565b820191905f5260205f20905b81548152906001019060200180831161191f57829003601f168201915b50505050508152602001600182015f9054906101000a900460070b60070b60070b815260200160028201805480602002602001604051908101604052809291908181526020015f905b82821015611a2d578382905f5260205f200180546119a2906134f3565b80601f01602080910402602001604051908101604052809291908181526020018280546119ce906134f3565b8015611a195780601f106119f057610100808354040283529160200191611a19565b820191905f5260205f20905b8154815290600101906020018083116119fc57829003601f168201915b505050505081526020019060010190611985565b50505050815250508152602001600782015f9054906101000a900460070b60070b60070b815260200160088201805480602002602001604051908101604052809291908181526020015f905b82821015611b21578382905f5260205f20018054611a96906134f3565b80601f0160208091040260200160405190810160405280929190818152602001828054611ac2906134f3565b8015611b0d5780601f10611ae457610100808354040283529160200191611b0d565b820191905f5260205f20905b815481529060010190602001808311611af057829003601f168201915b505050505081526020019060010190611a79565b505050508152602001600982015f9054906101000a900460030b60030b60030b81526020016009820160049054906101000a900460030b60030b60030b815250509050919050565b60015f8367ffffffffffffffff1667ffffffffffffffff1681526020019081526020015f2060030154811115611bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bcb90613845565b60405180910390fd5b600860015f8467ffffffffffffffff1667ffffffffffffffff1681526020019081526020015f2060130154611c099190613863565b431115611c4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c42906138e0565b60405180910390fd5b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166368efbce3336040518263ffffffff1660e01b8152600401611ca6919061229f565b5f60405180830381865afa158015611cc0573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f82011682018060405250810190611ce89190613375565b935050505080611d2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d249061396e565b60405180910390fd5b60025f8467ffffffffffffffff1667ffffffffffffffff1681526020019081526020015f2060405180606001604052808567ffffffffffffffff1681526020018481526020013373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003905f5260205f2090600302015f909190919091505f820151815f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550602082015181600101556040820151816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050507f3a15efc4974c5d6dc4b1c18daba29785cc2d9ae521ad82862e6d32b414b4f5bd838333604051611e649392919061221a565b60405180910390a1505050565b6040518060600160405280606081526020015f60070b8152602001606081525090565b828054828255905f5260205f20908101928215611f0a579160200282015b82811115611f09578251825f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190611eb2565b5b509050611f179190611fce565b5090565b828054828255905f5260205f20908101928215611f61579160200282015b82811115611f60578251829081611f509190613713565b5091602001919060010190611f39565b5b509050611f6e9190611fe9565b5090565b6040518061012001604052805f60070b8152602001606081526020015f60070b815260200160608152602001611fa6611e71565b81526020015f60070b8152602001606081526020015f60030b81526020015f60030b81525090565b5b80821115611fe5575f815f905550600101611fcf565b5090565b5b80821115612008575f8181611fff919061200c565b50600101611fea565b5090565b508054612018906134f3565b5f825580601f106120295750612046565b601f0160209004905f5260205f20908101906120459190611fce565b5b50565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6120838261205a565b9050919050565b61209381612079565b811461209d575f80fd5b50565b5f813590506120ae8161208a565b92915050565b5f602082840312156120c9576120c8612052565b5b5f6120d6848285016120a0565b91505092915050565b5f67ffffffffffffffff82169050919050565b6120fb816120df565b8114612105575f80fd5b50565b5f81359050612116816120f2565b92915050565b5f6020828403121561213157612130612052565b5b5f61213e84828501612108565b91505092915050565b61215081612079565b82525050565b5f819050919050565b61216881612156565b82525050565b5f6060820190506121815f830186612147565b61218e602083018561215f565b61219b604083018461215f565b949350505050565b6121ac81612156565b81146121b6575f80fd5b50565b5f813590506121c7816121a3565b92915050565b5f80604083850312156121e3576121e2612052565b5b5f6121f085828601612108565b9250506020612201858286016121b9565b9150509250929050565b612214816120df565b82525050565b5f60608201905061222d5f83018661220b565b61223a602083018561215f565b6122476040830184612147565b949350505050565b5f805f6060848603121561226657612265612052565b5b5f61227386828701612108565b9350506020612284868287016120a0565b9250506040612295868287016121b9565b9150509250925092565b5f6020820190506122b25f830184612147565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6122fa826122b8565b61230481856122c2565b93506123148185602086016122d2565b61231d816122e0565b840191505092915050565b5f8160070b9050919050565b61233d81612328565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f61237783836122f0565b905092915050565b5f602082019050919050565b5f61239582612343565b61239f818561234d565b9350836020820285016123b18561235d565b805f5b858110156123ec57848403895281516123cd858261236c565b94506123d88361237f565b925060208a019950506001810190506123b4565b50829750879550505050505092915050565b5f606083015f8301518482035f86015261241882826122f0565b915050602083015161242d6020860182612334565b5060408301518482036040860152612445828261238b565b9150508091505092915050565b5f6020820190508181035f83015261246a81846123fe565b905092915050565b5f819050919050565b5f61249561249061248b8461205a565b612472565b61205a565b9050919050565b5f6124a68261247b565b9050919050565b5f6124b78261249c565b9050919050565b6124c7816124ad565b82525050565b5f6020820190506124e05f8301846124be565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b612524826122e0565b810181811067ffffffffffffffff82111715612543576125426124ee565b5b80604052505050565b5f612555612049565b9050612561828261251b565b919050565b5f67ffffffffffffffff8211156125805761257f6124ee565b5b612589826122e0565b9050602081019050919050565b828183375f83830152505050565b5f6125b66125b184612566565b61254c565b9050828152602081018484840111156125d2576125d16124ea565b5b6125dd848285612596565b509392505050565b5f82601f8301126125f9576125f86124e6565b5b81356126098482602086016125a4565b91505092915050565b5f67ffffffffffffffff82111561262c5761262b6124ee565b5b602082029050602081019050919050565b5f80fd5b5f61265361264e84612612565b61254c565b905080838252602082019050602084028301858111156126765761267561263d565b5b835b8181101561269f578061268b88826120a0565b845260208401935050602081019050612678565b5050509392505050565b5f82601f8301126126bd576126bc6124e6565b5b81356126cd848260208601612641565b91505092915050565b5f8160030b9050919050565b6126eb816126d6565b81146126f5575f80fd5b50565b5f81359050612706816126e2565b92915050565b5f80fd5b5f80fd5b61271d81612328565b8114612727575f80fd5b50565b5f8135905061273881612714565b92915050565b5f67ffffffffffffffff821115612758576127576124ee565b5b602082029050602081019050919050565b5f61277b6127768461273e565b61254c565b9050808382526020820190506020840283018581111561279e5761279d61263d565b5b835b818110156127e557803567ffffffffffffffff8111156127c3576127c26124e6565b5b8086016127d089826125e5565b855260208501945050506020810190506127a0565b5050509392505050565b5f82601f830112612803576128026124e6565b5b8135612813848260208601612769565b91505092915050565b5f606082840312156128315761283061270c565b5b61283b606061254c565b90505f82013567ffffffffffffffff81111561285a57612859612710565b5b612866848285016125e5565b5f8301525060206128798482850161272a565b602083015250604082013567ffffffffffffffff81111561289d5761289c612710565b5b6128a9848285016127ef565b60408301525092915050565b5f61012082840312156128cb576128ca61270c565b5b6128d661012061254c565b90505f6128e58482850161272a565b5f83015250602082013567ffffffffffffffff81111561290857612907612710565b5b612914848285016127ef565b60208301525060406129288482850161272a565b604083015250606082013567ffffffffffffffff81111561294c5761294b612710565b5b612958848285016127ef565b606083015250608082013567ffffffffffffffff81111561297c5761297b612710565b5b6129888482850161281c565b60808301525060a061299c8482850161272a565b60a08301525060c082013567ffffffffffffffff8111156129c0576129bf612710565b5b6129cc848285016127ef565b60c08301525060e06129e0848285016126f8565b60e0830152506101006129f5848285016126f8565b6101008301525092915050565b5f805f805f805f805f806101408b8d031215612a2157612a20612052565b5b5f8b013567ffffffffffffffff811115612a3e57612a3d612056565b5b612a4a8d828e016125e5565b9a50506020612a5b8d828e01612108565b9950506040612a6c8d828e01612108565b9850506060612a7d8d828e01612108565b9750506080612a8e8d828e016121b9565b96505060a08b013567ffffffffffffffff811115612aaf57612aae612056565b5b612abb8d828e016125e5565b95505060c08b013567ffffffffffffffff811115612adc57612adb612056565b5b612ae88d828e016126a9565b94505060e0612af98d828e016126f8565b9350506101008b013567ffffffffffffffff811115612b1b57612b1a612056565b5b612b278d828e016125e5565b9250506101208b013567ffffffffffffffff811115612b4957612b48612056565b5b612b558d828e016128b5565b9150509295989b9194979a5092959850565b5f82825260208201905092915050565b5f612b81826122b8565b612b8b8185612b67565b9350612b9b8185602086016122d2565b612ba4816122e0565b840191505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b60028110612bed57612bec612baf565b5b50565b5f819050612bfd82612bdc565b919050565b5f612c0c82612bf0565b9050919050565b612c1c81612c02565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b612c5481612079565b82525050565b5f612c658383612c4b565b60208301905092915050565b5f602082019050919050565b5f612c8782612c22565b612c918185612c2c565b9350612c9c83612c3c565b805f5b83811015612ccc578151612cb38882612c5a565b9750612cbe83612c71565b925050600181019050612c9f565b5085935050505092915050565b5f604083015f830151612cee5f860182612334565b5060208301518482036020860152612d06828261238b565b9150508091505092915050565b5f604083015f830151612d285f860182612334565b5060208301518482036020860152612d40828261238b565b9150508091505092915050565b5f606083015f8301518482035f860152612d6782826122f0565b9150506020830151612d7c6020860182612334565b5060408301518482036040860152612d94828261238b565b9150508091505092915050565b5f604083015f830151612db65f860182612334565b5060208301518482036020860152612dce828261238b565b9150508091505092915050565b612de4816126d6565b82525050565b604082015f820151612dfe5f850182612ddb565b506020820151612e116020850182612ddb565b50505050565b5f60c083015f8301518482035f860152612e318282612cd9565b91505060208301518482036020860152612e4b8282612d13565b91505060408301518482036040860152612e658282612d4d565b91505060608301518482036060860152612e7f8282612da1565b9150506080830151612e946080860182612dea565b508091505092915050565b5f606083015f8301518482035f860152612eb98282612c7d565b91505060208301518482036020860152612ed38282612e17565b9150506040830151612ee86040860182612ddb565b508091505092915050565b5f61018082019050612f075f83018f61220b565b8181036020830152612f19818e612b77565b9050612f28604083018d61220b565b612f35606083018c61220b565b612f42608083018b61220b565b612f4f60a083018a61215f565b81810360c0830152612f618189612b77565b9050612f7060e0830188612147565b612f7e610100830187612c13565b818103610120830152612f918186612e9f565b9050818103610140830152612fa68185612b77565b9050612fb661016083018461215f565b9d9c50505050505050505050505050565b5f61012083015f830151612fdd5f860182612334565b5060208301518482036020860152612ff5828261238b565b915050604083015161300a6040860182612334565b5060608301518482036060860152613022828261238b565b9150506080830151848203608086015261303c8282612d4d565b91505060a083015161305160a0860182612334565b5060c083015184820360c0860152613069828261238b565b91505060e083015161307e60e0860182612ddb565b50610100830151613093610100860182612ddb565b508091505092915050565b5f6020820190508181035f8301526130b68184612fc7565b905092915050565b7f4f6e6c79206f776e65722063616e20706572666f726d207468697320616374695f8201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b5f613118602283612b67565b9150613123826130be565b604082019050919050565b5f6020820190508181035f8301526131458161310c565b9050919050565b7f4f6e6c7920617574686f72697a656420616464726573732063616e20706572665f8201527f6f726d207468697320616374696f6e0000000000000000000000000000000000602082015250565b5f6131a6602f83612b67565b91506131b18261314c565b604082019050919050565b5f6020820190508181035f8301526131d38161319a565b9050919050565b7f4f7264657220646f6573206e6f742065786973740000000000000000000000005f82015250565b5f61320e601483612b67565b9150613219826131da565b602082019050919050565b5f6020820190508181035f83015261323b81613202565b9050919050565b7f4f72646572206973206e6f7420616374697665000000000000000000000000005f82015250565b5f613276601383612b67565b915061328182613242565b602082019050919050565b5f6020820190508181035f8301526132a38161326a565b9050919050565b5f815190506132b8816121a3565b92915050565b5f6132d06132cb84612566565b61254c565b9050828152602081018484840111156132ec576132eb6124ea565b5b6132f78482856122d2565b509392505050565b5f82601f830112613313576133126124e6565b5b81516133238482602086016132be565b91505092915050565b5f8151905061333a8161208a565b92915050565b5f8115159050919050565b61335481613340565b811461335e575f80fd5b50565b5f8151905061336f8161334b565b92915050565b5f805f806080858703121561338d5761338c612052565b5b5f61339a878288016132aa565b945050602085015167ffffffffffffffff8111156133bb576133ba612056565b5b6133c7878288016132ff565b93505060406133d88782880161332c565b92505060606133e987828801613361565b91505092959194509250565b7f50726f7669646572206973206e6f7420616e20616374697665206e6f646520705f8201527f726f766964657200000000000000000000000000000000000000000000000000602082015250565b5f61344f602783612b67565b915061345a826133f5565b604082019050919050565b5f6020820190508181035f83015261347c81613443565b9050919050565b5f6080820190506134965f83018761220b565b6134a36020830186612147565b6134b0604083018561215f565b6134bd606083018461215f565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061350a57607f821691505b60208210810361351d5761351c6134c6565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61355a826120df565b915067ffffffffffffffff820361357457613573613523565b5b600182019050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026135db7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826135a0565b6135e586836135a0565b95508019841693508086168417925050509392505050565b5f61361761361261360d84612156565b612472565b612156565b9050919050565b5f819050919050565b613630836135fd565b61364461363c8261361e565b8484546135ac565b825550505050565b5f90565b61365861364c565b613663818484613627565b505050565b5b818110156136865761367b5f82613650565b600181019050613669565b5050565b601f8211156136cb5761369c8161357f565b6136a584613591565b810160208510156136b4578190505b6136c86136c085613591565b830182613668565b50505b505050565b5f82821c905092915050565b5f6136eb5f19846008026136d0565b1980831691505092915050565b5f61370383836136dc565b9150826002028217905092915050565b61371c826122b8565b67ffffffffffffffff811115613735576137346124ee565b5b61373f82546134f3565b61374a82828561368a565b5f60209050601f83116001811461377b575f8415613769578287015190505b61377385826136f8565b8655506137da565b601f1984166137898661357f565b5f5b828110156137b05784890151825560018201915060208501945060208101905061378b565b868310156137cd57848901516137c9601f8916826136dc565b8355505b6001600288020188555050505b505050505050565b5f6020820190506137f55f83018461220b565b92915050565b7f4269642070726963652065786365656473206d617820707269636500000000005f82015250565b5f61382f601b83612b67565b915061383a826137fb565b602082019050919050565b5f6020820190508181035f83015261385c81613823565b9050919050565b5f61386d82612156565b915061387883612156565b92508282019050808211156138905761388f613523565b5b92915050565b7f42696464696e6720706572696f642068617320656e64656400000000000000005f82015250565b5f6138ca601883612b67565b91506138d582613896565b602082019050919050565b5f6020820190508181035f8301526138f7816138be565b9050919050565b7f426964646572206973206e6f7420616e20616374697665206e6f64652070726f5f8201527f7669646572000000000000000000000000000000000000000000000000000000602082015250565b5f613958602583612b67565b9150613963826138fe565b604082019050919050565b5f6020820190508181035f8301526139858161394c565b905091905056fea26469706673582212203d95c0fe768c2e707a838c39d6f58bc636e228debc1915b9bbecc797b3dcdf7d64736f6c63430008190033",
}

// OrderMatchingABI is the input ABI used to generate the binding from.
// Deprecated: Use OrderMatchingMetaData.ABI instead.
var OrderMatchingABI = OrderMatchingMetaData.ABI

// OrderMatchingBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use OrderMatchingMetaData.Bin instead.
var OrderMatchingBin = OrderMatchingMetaData.Bin

// DeployOrderMatching deploys a new Ethereum contract, binding an instance of OrderMatching to it.
func DeployOrderMatching(auth *bind.TransactOpts, backend bind.ContractBackend, _nodeProviderRegistryAddress common.Address, _authorizedAddress common.Address) (common.Address, *types.Transaction, *OrderMatching, error) {
	parsed, err := OrderMatchingMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(OrderMatchingBin), backend, _nodeProviderRegistryAddress, _authorizedAddress)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &OrderMatching{OrderMatchingCaller: OrderMatchingCaller{contract: contract}, OrderMatchingTransactor: OrderMatchingTransactor{contract: contract}, OrderMatchingFilterer: OrderMatchingFilterer{contract: contract}}, nil
}

// OrderMatching is an auto generated Go binding around an Ethereum contract.
type OrderMatching struct {
	OrderMatchingCaller     // Read-only binding to the contract
	OrderMatchingTransactor // Write-only binding to the contract
	OrderMatchingFilterer   // Log filterer for contract events
}

// OrderMatchingCaller is an auto generated read-only Go binding around an Ethereum contract.
type OrderMatchingCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OrderMatchingTransactor is an auto generated write-only Go binding around an Ethereum contract.
type OrderMatchingTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OrderMatchingFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type OrderMatchingFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OrderMatchingSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type OrderMatchingSession struct {
	Contract     *OrderMatching    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// OrderMatchingCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type OrderMatchingCallerSession struct {
	Contract *OrderMatchingCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// OrderMatchingTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type OrderMatchingTransactorSession struct {
	Contract     *OrderMatchingTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// OrderMatchingRaw is an auto generated low-level Go binding around an Ethereum contract.
type OrderMatchingRaw struct {
	Contract *OrderMatching // Generic contract binding to access the raw methods on
}

// OrderMatchingCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type OrderMatchingCallerRaw struct {
	Contract *OrderMatchingCaller // Generic read-only contract binding to access the raw methods on
}

// OrderMatchingTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type OrderMatchingTransactorRaw struct {
	Contract *OrderMatchingTransactor // Generic write-only contract binding to access the raw methods on
}

// NewOrderMatching creates a new instance of OrderMatching, bound to a specific deployed contract.
func NewOrderMatching(address common.Address, backend bind.ContractBackend) (*OrderMatching, error) {
	contract, err := bindOrderMatching(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &OrderMatching{OrderMatchingCaller: OrderMatchingCaller{contract: contract}, OrderMatchingTransactor: OrderMatchingTransactor{contract: contract}, OrderMatchingFilterer: OrderMatchingFilterer{contract: contract}}, nil
}

// NewOrderMatchingCaller creates a new read-only instance of OrderMatching, bound to a specific deployed contract.
func NewOrderMatchingCaller(address common.Address, caller bind.ContractCaller) (*OrderMatchingCaller, error) {
	contract, err := bindOrderMatching(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &OrderMatchingCaller{contract: contract}, nil
}

// NewOrderMatchingTransactor creates a new write-only instance of OrderMatching, bound to a specific deployed contract.
func NewOrderMatchingTransactor(address common.Address, transactor bind.ContractTransactor) (*OrderMatchingTransactor, error) {
	contract, err := bindOrderMatching(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &OrderMatchingTransactor{contract: contract}, nil
}

// NewOrderMatchingFilterer creates a new log filterer instance of OrderMatching, bound to a specific deployed contract.
func NewOrderMatchingFilterer(address common.Address, filterer bind.ContractFilterer) (*OrderMatchingFilterer, error) {
	contract, err := bindOrderMatching(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &OrderMatchingFilterer{contract: contract}, nil
}

// bindOrderMatching binds a generic wrapper to an already deployed contract.
func bindOrderMatching(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := OrderMatchingMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OrderMatching *OrderMatchingRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OrderMatching.Contract.OrderMatchingCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OrderMatching *OrderMatchingRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OrderMatching.Contract.OrderMatchingTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OrderMatching *OrderMatchingRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OrderMatching.Contract.OrderMatchingTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OrderMatching *OrderMatchingCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OrderMatching.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OrderMatching *OrderMatchingTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OrderMatching.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OrderMatching *OrderMatchingTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OrderMatching.Contract.contract.Transact(opts, method, params...)
}

// AuthorizedAddress is a free data retrieval call binding the contract method 0x5539d400.
//
// Solidity: function authorizedAddress() view returns(address)
func (_OrderMatching *OrderMatchingCaller) AuthorizedAddress(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _OrderMatching.contract.Call(opts, &out, "authorizedAddress")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// AuthorizedAddress is a free data retrieval call binding the contract method 0x5539d400.
//
// Solidity: function authorizedAddress() view returns(address)
func (_OrderMatching *OrderMatchingSession) AuthorizedAddress() (common.Address, error) {
	return _OrderMatching.Contract.AuthorizedAddress(&_OrderMatching.CallOpts)
}

// AuthorizedAddress is a free data retrieval call binding the contract method 0x5539d400.
//
// Solidity: function authorizedAddress() view returns(address)
func (_OrderMatching *OrderMatchingCallerSession) AuthorizedAddress() (common.Address, error) {
	return _OrderMatching.Contract.AuthorizedAddress(&_OrderMatching.CallOpts)
}

// Bids is a free data retrieval call binding the contract method 0x47d4f8f2.
//
// Solidity: function bids(uint64 , uint256 ) view returns(uint64 orderId, uint256 bidPrice, address bidder)
func (_OrderMatching *OrderMatchingCaller) Bids(opts *bind.CallOpts, arg0 uint64, arg1 *big.Int) (struct {
	OrderId  uint64
	BidPrice *big.Int
	Bidder   common.Address
}, error) {
	var out []interface{}
	err := _OrderMatching.contract.Call(opts, &out, "bids", arg0, arg1)

	outstruct := new(struct {
		OrderId  uint64
		BidPrice *big.Int
		Bidder   common.Address
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.OrderId = *abi.ConvertType(out[0], new(uint64)).(*uint64)
	outstruct.BidPrice = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.Bidder = *abi.ConvertType(out[2], new(common.Address)).(*common.Address)

	return *outstruct, err

}

// Bids is a free data retrieval call binding the contract method 0x47d4f8f2.
//
// Solidity: function bids(uint64 , uint256 ) view returns(uint64 orderId, uint256 bidPrice, address bidder)
func (_OrderMatching *OrderMatchingSession) Bids(arg0 uint64, arg1 *big.Int) (struct {
	OrderId  uint64
	BidPrice *big.Int
	Bidder   common.Address
}, error) {
	return _OrderMatching.Contract.Bids(&_OrderMatching.CallOpts, arg0, arg1)
}

// Bids is a free data retrieval call binding the contract method 0x47d4f8f2.
//
// Solidity: function bids(uint64 , uint256 ) view returns(uint64 orderId, uint256 bidPrice, address bidder)
func (_OrderMatching *OrderMatchingCallerSession) Bids(arg0 uint64, arg1 *big.Int) (struct {
	OrderId  uint64
	BidPrice *big.Int
	Bidder   common.Address
}, error) {
	return _OrderMatching.Contract.Bids(&_OrderMatching.CallOpts, arg0, arg1)
}

// GetResourceAttributes is a free data retrieval call binding the contract method 0xb9659119.
//
// Solidity: function getResourceAttributes(uint64 _orderId) view returns((int64,string[],int64,string[],(string,int64,string[]),int64,string[],int32,int32))
func (_OrderMatching *OrderMatchingCaller) GetResourceAttributes(opts *bind.CallOpts, _orderId uint64) (OrderMatchingResourceAttributes, error) {
	var out []interface{}
	err := _OrderMatching.contract.Call(opts, &out, "getResourceAttributes", _orderId)

	if err != nil {
		return *new(OrderMatchingResourceAttributes), err
	}

	out0 := *abi.ConvertType(out[0], new(OrderMatchingResourceAttributes)).(*OrderMatchingResourceAttributes)

	return out0, err

}

// GetResourceAttributes is a free data retrieval call binding the contract method 0xb9659119.
//
// Solidity: function getResourceAttributes(uint64 _orderId) view returns((int64,string[],int64,string[],(string,int64,string[]),int64,string[],int32,int32))
func (_OrderMatching *OrderMatchingSession) GetResourceAttributes(_orderId uint64) (OrderMatchingResourceAttributes, error) {
	return _OrderMatching.Contract.GetResourceAttributes(&_OrderMatching.CallOpts, _orderId)
}

// GetResourceAttributes is a free data retrieval call binding the contract method 0xb9659119.
//
// Solidity: function getResourceAttributes(uint64 _orderId) view returns((int64,string[],int64,string[],(string,int64,string[]),int64,string[],int32,int32))
func (_OrderMatching *OrderMatchingCallerSession) GetResourceAttributes(_orderId uint64) (OrderMatchingResourceAttributes, error) {
	return _OrderMatching.Contract.GetResourceAttributes(&_OrderMatching.CallOpts, _orderId)
}

// GetVolume is a free data retrieval call binding the contract method 0x61f3726c.
//
// Solidity: function getVolume(uint64 _orderId) view returns((string,int64,string[]))
func (_OrderMatching *OrderMatchingCaller) GetVolume(opts *bind.CallOpts, _orderId uint64) (OrderMatchingVolume, error) {
	var out []interface{}
	err := _OrderMatching.contract.Call(opts, &out, "getVolume", _orderId)

	if err != nil {
		return *new(OrderMatchingVolume), err
	}

	out0 := *abi.ConvertType(out[0], new(OrderMatchingVolume)).(*OrderMatchingVolume)

	return out0, err

}

// GetVolume is a free data retrieval call binding the contract method 0x61f3726c.
//
// Solidity: function getVolume(uint64 _orderId) view returns((string,int64,string[]))
func (_OrderMatching *OrderMatchingSession) GetVolume(_orderId uint64) (OrderMatchingVolume, error) {
	return _OrderMatching.Contract.GetVolume(&_OrderMatching.CallOpts, _orderId)
}

// GetVolume is a free data retrieval call binding the contract method 0x61f3726c.
//
// Solidity: function getVolume(uint64 _orderId) view returns((string,int64,string[]))
func (_OrderMatching *OrderMatchingCallerSession) GetVolume(_orderId uint64) (OrderMatchingVolume, error) {
	return _OrderMatching.Contract.GetVolume(&_OrderMatching.CallOpts, _orderId)
}

// MatchedOrders is a free data retrieval call binding the contract method 0x3975e614.
//
// Solidity: function matchedOrders(uint64 ) view returns(address providerAddress, uint256 providerId, uint256 acceptedPrice)
func (_OrderMatching *OrderMatchingCaller) MatchedOrders(opts *bind.CallOpts, arg0 uint64) (struct {
	ProviderAddress common.Address
	ProviderId      *big.Int
	AcceptedPrice   *big.Int
}, error) {
	var out []interface{}
	err := _OrderMatching.contract.Call(opts, &out, "matchedOrders", arg0)

	outstruct := new(struct {
		ProviderAddress common.Address
		ProviderId      *big.Int
		AcceptedPrice   *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.ProviderAddress = *abi.ConvertType(out[0], new(common.Address)).(*common.Address)
	outstruct.ProviderId = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.AcceptedPrice = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// MatchedOrders is a free data retrieval call binding the contract method 0x3975e614.
//
// Solidity: function matchedOrders(uint64 ) view returns(address providerAddress, uint256 providerId, uint256 acceptedPrice)
func (_OrderMatching *OrderMatchingSession) MatchedOrders(arg0 uint64) (struct {
	ProviderAddress common.Address
	ProviderId      *big.Int
	AcceptedPrice   *big.Int
}, error) {
	return _OrderMatching.Contract.MatchedOrders(&_OrderMatching.CallOpts, arg0)
}

// MatchedOrders is a free data retrieval call binding the contract method 0x3975e614.
//
// Solidity: function matchedOrders(uint64 ) view returns(address providerAddress, uint256 providerId, uint256 acceptedPrice)
func (_OrderMatching *OrderMatchingCallerSession) MatchedOrders(arg0 uint64) (struct {
	ProviderAddress common.Address
	ProviderId      *big.Int
	AcceptedPrice   *big.Int
}, error) {
	return _OrderMatching.Contract.MatchedOrders(&_OrderMatching.CallOpts, arg0)
}

// NodeProviderRegistry is a free data retrieval call binding the contract method 0x6582972e.
//
// Solidity: function nodeProviderRegistry() view returns(address)
func (_OrderMatching *OrderMatchingCaller) NodeProviderRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _OrderMatching.contract.Call(opts, &out, "nodeProviderRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// NodeProviderRegistry is a free data retrieval call binding the contract method 0x6582972e.
//
// Solidity: function nodeProviderRegistry() view returns(address)
func (_OrderMatching *OrderMatchingSession) NodeProviderRegistry() (common.Address, error) {
	return _OrderMatching.Contract.NodeProviderRegistry(&_OrderMatching.CallOpts)
}

// NodeProviderRegistry is a free data retrieval call binding the contract method 0x6582972e.
//
// Solidity: function nodeProviderRegistry() view returns(address)
func (_OrderMatching *OrderMatchingCallerSession) NodeProviderRegistry() (common.Address, error) {
	return _OrderMatching.Contract.NodeProviderRegistry(&_OrderMatching.CallOpts)
}

// Orders is a free data retrieval call binding the contract method 0xa469dffa.
//
// Solidity: function orders(uint64 ) view returns(uint64 id, string region, uint64 uptime, uint64 reputation, uint64 slashes, uint256 maxPrice, string token, address creator, uint8 state, (address[],((int64,string[]),(int64,string[]),(string,int64,string[]),(int64,string[]),(int32,int32)),int32) specs, string version, uint256 creationBlock)
func (_OrderMatching *OrderMatchingCaller) Orders(opts *bind.CallOpts, arg0 uint64) (struct {
	Id            uint64
	Region        string
	Uptime        uint64
	Reputation    uint64
	Slashes       uint64
	MaxPrice      *big.Int
	Token         string
	Creator       common.Address
	State         uint8
	Specs         OrderMatchingSPECS
	Version       string
	CreationBlock *big.Int
}, error) {
	var out []interface{}
	err := _OrderMatching.contract.Call(opts, &out, "orders", arg0)

	outstruct := new(struct {
		Id            uint64
		Region        string
		Uptime        uint64
		Reputation    uint64
		Slashes       uint64
		MaxPrice      *big.Int
		Token         string
		Creator       common.Address
		State         uint8
		Specs         OrderMatchingSPECS
		Version       string
		CreationBlock *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Id = *abi.ConvertType(out[0], new(uint64)).(*uint64)
	outstruct.Region = *abi.ConvertType(out[1], new(string)).(*string)
	outstruct.Uptime = *abi.ConvertType(out[2], new(uint64)).(*uint64)
	outstruct.Reputation = *abi.ConvertType(out[3], new(uint64)).(*uint64)
	outstruct.Slashes = *abi.ConvertType(out[4], new(uint64)).(*uint64)
	outstruct.MaxPrice = *abi.ConvertType(out[5], new(*big.Int)).(**big.Int)
	outstruct.Token = *abi.ConvertType(out[6], new(string)).(*string)
	outstruct.Creator = *abi.ConvertType(out[7], new(common.Address)).(*common.Address)
	outstruct.State = *abi.ConvertType(out[8], new(uint8)).(*uint8)
	outstruct.Specs = *abi.ConvertType(out[9], new(OrderMatchingSPECS)).(*OrderMatchingSPECS)
	outstruct.Version = *abi.ConvertType(out[10], new(string)).(*string)
	outstruct.CreationBlock = *abi.ConvertType(out[11], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// Orders is a free data retrieval call binding the contract method 0xa469dffa.
//
// Solidity: function orders(uint64 ) view returns(uint64 id, string region, uint64 uptime, uint64 reputation, uint64 slashes, uint256 maxPrice, string token, address creator, uint8 state, (address[],((int64,string[]),(int64,string[]),(string,int64,string[]),(int64,string[]),(int32,int32)),int32) specs, string version, uint256 creationBlock)
func (_OrderMatching *OrderMatchingSession) Orders(arg0 uint64) (struct {
	Id            uint64
	Region        string
	Uptime        uint64
	Reputation    uint64
	Slashes       uint64
	MaxPrice      *big.Int
	Token         string
	Creator       common.Address
	State         uint8
	Specs         OrderMatchingSPECS
	Version       string
	CreationBlock *big.Int
}, error) {
	return _OrderMatching.Contract.Orders(&_OrderMatching.CallOpts, arg0)
}

// Orders is a free data retrieval call binding the contract method 0xa469dffa.
//
// Solidity: function orders(uint64 ) view returns(uint64 id, string region, uint64 uptime, uint64 reputation, uint64 slashes, uint256 maxPrice, string token, address creator, uint8 state, (address[],((int64,string[]),(int64,string[]),(string,int64,string[]),(int64,string[]),(int32,int32)),int32) specs, string version, uint256 creationBlock)
func (_OrderMatching *OrderMatchingCallerSession) Orders(arg0 uint64) (struct {
	Id            uint64
	Region        string
	Uptime        uint64
	Reputation    uint64
	Slashes       uint64
	MaxPrice      *big.Int
	Token         string
	Creator       common.Address
	State         uint8
	Specs         OrderMatchingSPECS
	Version       string
	CreationBlock *big.Int
}, error) {
	return _OrderMatching.Contract.Orders(&_OrderMatching.CallOpts, arg0)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_OrderMatching *OrderMatchingCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _OrderMatching.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_OrderMatching *OrderMatchingSession) Owner() (common.Address, error) {
	return _OrderMatching.Contract.Owner(&_OrderMatching.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_OrderMatching *OrderMatchingCallerSession) Owner() (common.Address, error) {
	return _OrderMatching.Contract.Owner(&_OrderMatching.CallOpts)
}

// CreateOrder is a paid mutator transaction binding the contract method 0x7e1532d2.
//
// Solidity: function createOrder(string _region, uint64 _uptime, uint64 _reputation, uint64 _slashes, uint256 _maxPrice, string _token, address[] _placementsRequirement, int32 _replicaCount, string _version, (int64,string[],int64,string[],(string,int64,string[]),int64,string[],int32,int32) _resourceAttributes) returns()
func (_OrderMatching *OrderMatchingTransactor) CreateOrder(opts *bind.TransactOpts, _region string, _uptime uint64, _reputation uint64, _slashes uint64, _maxPrice *big.Int, _token string, _placementsRequirement []common.Address, _replicaCount int32, _version string, _resourceAttributes OrderMatchingResourceAttributes) (*types.Transaction, error) {
	return _OrderMatching.contract.Transact(opts, "createOrder", _region, _uptime, _reputation, _slashes, _maxPrice, _token, _placementsRequirement, _replicaCount, _version, _resourceAttributes)
}

// CreateOrder is a paid mutator transaction binding the contract method 0x7e1532d2.
//
// Solidity: function createOrder(string _region, uint64 _uptime, uint64 _reputation, uint64 _slashes, uint256 _maxPrice, string _token, address[] _placementsRequirement, int32 _replicaCount, string _version, (int64,string[],int64,string[],(string,int64,string[]),int64,string[],int32,int32) _resourceAttributes) returns()
func (_OrderMatching *OrderMatchingSession) CreateOrder(_region string, _uptime uint64, _reputation uint64, _slashes uint64, _maxPrice *big.Int, _token string, _placementsRequirement []common.Address, _replicaCount int32, _version string, _resourceAttributes OrderMatchingResourceAttributes) (*types.Transaction, error) {
	return _OrderMatching.Contract.CreateOrder(&_OrderMatching.TransactOpts, _region, _uptime, _reputation, _slashes, _maxPrice, _token, _placementsRequirement, _replicaCount, _version, _resourceAttributes)
}

// CreateOrder is a paid mutator transaction binding the contract method 0x7e1532d2.
//
// Solidity: function createOrder(string _region, uint64 _uptime, uint64 _reputation, uint64 _slashes, uint256 _maxPrice, string _token, address[] _placementsRequirement, int32 _replicaCount, string _version, (int64,string[],int64,string[],(string,int64,string[]),int64,string[],int32,int32) _resourceAttributes) returns()
func (_OrderMatching *OrderMatchingTransactorSession) CreateOrder(_region string, _uptime uint64, _reputation uint64, _slashes uint64, _maxPrice *big.Int, _token string, _placementsRequirement []common.Address, _replicaCount int32, _version string, _resourceAttributes OrderMatchingResourceAttributes) (*types.Transaction, error) {
	return _OrderMatching.Contract.CreateOrder(&_OrderMatching.TransactOpts, _region, _uptime, _reputation, _slashes, _maxPrice, _token, _placementsRequirement, _replicaCount, _version, _resourceAttributes)
}

// MatchOrder is a paid mutator transaction binding the contract method 0x4fd2edbb.
//
// Solidity: function matchOrder(uint64 _orderId, address _providerAddress, uint256 _acceptedPrice) returns()
func (_OrderMatching *OrderMatchingTransactor) MatchOrder(opts *bind.TransactOpts, _orderId uint64, _providerAddress common.Address, _acceptedPrice *big.Int) (*types.Transaction, error) {
	return _OrderMatching.contract.Transact(opts, "matchOrder", _orderId, _providerAddress, _acceptedPrice)
}

// MatchOrder is a paid mutator transaction binding the contract method 0x4fd2edbb.
//
// Solidity: function matchOrder(uint64 _orderId, address _providerAddress, uint256 _acceptedPrice) returns()
func (_OrderMatching *OrderMatchingSession) MatchOrder(_orderId uint64, _providerAddress common.Address, _acceptedPrice *big.Int) (*types.Transaction, error) {
	return _OrderMatching.Contract.MatchOrder(&_OrderMatching.TransactOpts, _orderId, _providerAddress, _acceptedPrice)
}

// MatchOrder is a paid mutator transaction binding the contract method 0x4fd2edbb.
//
// Solidity: function matchOrder(uint64 _orderId, address _providerAddress, uint256 _acceptedPrice) returns()
func (_OrderMatching *OrderMatchingTransactorSession) MatchOrder(_orderId uint64, _providerAddress common.Address, _acceptedPrice *big.Int) (*types.Transaction, error) {
	return _OrderMatching.Contract.MatchOrder(&_OrderMatching.TransactOpts, _orderId, _providerAddress, _acceptedPrice)
}

// PlaceBid is a paid mutator transaction binding the contract method 0xfd2e5a23.
//
// Solidity: function placeBid(uint64 _orderId, uint256 _bidPrice) returns()
func (_OrderMatching *OrderMatchingTransactor) PlaceBid(opts *bind.TransactOpts, _orderId uint64, _bidPrice *big.Int) (*types.Transaction, error) {
	return _OrderMatching.contract.Transact(opts, "placeBid", _orderId, _bidPrice)
}

// PlaceBid is a paid mutator transaction binding the contract method 0xfd2e5a23.
//
// Solidity: function placeBid(uint64 _orderId, uint256 _bidPrice) returns()
func (_OrderMatching *OrderMatchingSession) PlaceBid(_orderId uint64, _bidPrice *big.Int) (*types.Transaction, error) {
	return _OrderMatching.Contract.PlaceBid(&_OrderMatching.TransactOpts, _orderId, _bidPrice)
}

// PlaceBid is a paid mutator transaction binding the contract method 0xfd2e5a23.
//
// Solidity: function placeBid(uint64 _orderId, uint256 _bidPrice) returns()
func (_OrderMatching *OrderMatchingTransactorSession) PlaceBid(_orderId uint64, _bidPrice *big.Int) (*types.Transaction, error) {
	return _OrderMatching.Contract.PlaceBid(&_OrderMatching.TransactOpts, _orderId, _bidPrice)
}

// UpdateAuthorizedAddress is a paid mutator transaction binding the contract method 0x28d389bc.
//
// Solidity: function updateAuthorizedAddress(address _newAuthorizedAddress) returns()
func (_OrderMatching *OrderMatchingTransactor) UpdateAuthorizedAddress(opts *bind.TransactOpts, _newAuthorizedAddress common.Address) (*types.Transaction, error) {
	return _OrderMatching.contract.Transact(opts, "updateAuthorizedAddress", _newAuthorizedAddress)
}

// UpdateAuthorizedAddress is a paid mutator transaction binding the contract method 0x28d389bc.
//
// Solidity: function updateAuthorizedAddress(address _newAuthorizedAddress) returns()
func (_OrderMatching *OrderMatchingSession) UpdateAuthorizedAddress(_newAuthorizedAddress common.Address) (*types.Transaction, error) {
	return _OrderMatching.Contract.UpdateAuthorizedAddress(&_OrderMatching.TransactOpts, _newAuthorizedAddress)
}

// UpdateAuthorizedAddress is a paid mutator transaction binding the contract method 0x28d389bc.
//
// Solidity: function updateAuthorizedAddress(address _newAuthorizedAddress) returns()
func (_OrderMatching *OrderMatchingTransactorSession) UpdateAuthorizedAddress(_newAuthorizedAddress common.Address) (*types.Transaction, error) {
	return _OrderMatching.Contract.UpdateAuthorizedAddress(&_OrderMatching.TransactOpts, _newAuthorizedAddress)
}

// OrderMatchingAuthorizedAddressUpdatedIterator is returned from FilterAuthorizedAddressUpdated and is used to iterate over the raw logs and unpacked data for AuthorizedAddressUpdated events raised by the OrderMatching contract.
type OrderMatchingAuthorizedAddressUpdatedIterator struct {
	Event *OrderMatchingAuthorizedAddressUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *OrderMatchingAuthorizedAddressUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(OrderMatchingAuthorizedAddressUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(OrderMatchingAuthorizedAddressUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *OrderMatchingAuthorizedAddressUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *OrderMatchingAuthorizedAddressUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// OrderMatchingAuthorizedAddressUpdated represents a AuthorizedAddressUpdated event raised by the OrderMatching contract.
type OrderMatchingAuthorizedAddressUpdated struct {
	NewAuthorizedAddress common.Address
	Raw                  types.Log // Blockchain specific contextual infos
}

// FilterAuthorizedAddressUpdated is a free log retrieval operation binding the contract event 0xe12f594f8990d16225e1238de64b5ef16fbe78fbb1a70f64e3a82274e9554c0a.
//
// Solidity: event AuthorizedAddressUpdated(address newAuthorizedAddress)
func (_OrderMatching *OrderMatchingFilterer) FilterAuthorizedAddressUpdated(opts *bind.FilterOpts) (*OrderMatchingAuthorizedAddressUpdatedIterator, error) {

	logs, sub, err := _OrderMatching.contract.FilterLogs(opts, "AuthorizedAddressUpdated")
	if err != nil {
		return nil, err
	}
	return &OrderMatchingAuthorizedAddressUpdatedIterator{contract: _OrderMatching.contract, event: "AuthorizedAddressUpdated", logs: logs, sub: sub}, nil
}

// WatchAuthorizedAddressUpdated is a free log subscription operation binding the contract event 0xe12f594f8990d16225e1238de64b5ef16fbe78fbb1a70f64e3a82274e9554c0a.
//
// Solidity: event AuthorizedAddressUpdated(address newAuthorizedAddress)
func (_OrderMatching *OrderMatchingFilterer) WatchAuthorizedAddressUpdated(opts *bind.WatchOpts, sink chan<- *OrderMatchingAuthorizedAddressUpdated) (event.Subscription, error) {

	logs, sub, err := _OrderMatching.contract.WatchLogs(opts, "AuthorizedAddressUpdated")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(OrderMatchingAuthorizedAddressUpdated)
				if err := _OrderMatching.contract.UnpackLog(event, "AuthorizedAddressUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAuthorizedAddressUpdated is a log parse operation binding the contract event 0xe12f594f8990d16225e1238de64b5ef16fbe78fbb1a70f64e3a82274e9554c0a.
//
// Solidity: event AuthorizedAddressUpdated(address newAuthorizedAddress)
func (_OrderMatching *OrderMatchingFilterer) ParseAuthorizedAddressUpdated(log types.Log) (*OrderMatchingAuthorizedAddressUpdated, error) {
	event := new(OrderMatchingAuthorizedAddressUpdated)
	if err := _OrderMatching.contract.UnpackLog(event, "AuthorizedAddressUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// OrderMatchingBidPlacedIterator is returned from FilterBidPlaced and is used to iterate over the raw logs and unpacked data for BidPlaced events raised by the OrderMatching contract.
type OrderMatchingBidPlacedIterator struct {
	Event *OrderMatchingBidPlaced // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *OrderMatchingBidPlacedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(OrderMatchingBidPlaced)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(OrderMatchingBidPlaced)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *OrderMatchingBidPlacedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *OrderMatchingBidPlacedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// OrderMatchingBidPlaced represents a BidPlaced event raised by the OrderMatching contract.
type OrderMatchingBidPlaced struct {
	OrderId  uint64
	BidPrice *big.Int
	Bidder   common.Address
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterBidPlaced is a free log retrieval operation binding the contract event 0x3a15efc4974c5d6dc4b1c18daba29785cc2d9ae521ad82862e6d32b414b4f5bd.
//
// Solidity: event BidPlaced(uint64 orderId, uint256 bidPrice, address bidder)
func (_OrderMatching *OrderMatchingFilterer) FilterBidPlaced(opts *bind.FilterOpts) (*OrderMatchingBidPlacedIterator, error) {

	logs, sub, err := _OrderMatching.contract.FilterLogs(opts, "BidPlaced")
	if err != nil {
		return nil, err
	}
	return &OrderMatchingBidPlacedIterator{contract: _OrderMatching.contract, event: "BidPlaced", logs: logs, sub: sub}, nil
}

// WatchBidPlaced is a free log subscription operation binding the contract event 0x3a15efc4974c5d6dc4b1c18daba29785cc2d9ae521ad82862e6d32b414b4f5bd.
//
// Solidity: event BidPlaced(uint64 orderId, uint256 bidPrice, address bidder)
func (_OrderMatching *OrderMatchingFilterer) WatchBidPlaced(opts *bind.WatchOpts, sink chan<- *OrderMatchingBidPlaced) (event.Subscription, error) {

	logs, sub, err := _OrderMatching.contract.WatchLogs(opts, "BidPlaced")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(OrderMatchingBidPlaced)
				if err := _OrderMatching.contract.UnpackLog(event, "BidPlaced", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBidPlaced is a log parse operation binding the contract event 0x3a15efc4974c5d6dc4b1c18daba29785cc2d9ae521ad82862e6d32b414b4f5bd.
//
// Solidity: event BidPlaced(uint64 orderId, uint256 bidPrice, address bidder)
func (_OrderMatching *OrderMatchingFilterer) ParseBidPlaced(log types.Log) (*OrderMatchingBidPlaced, error) {
	event := new(OrderMatchingBidPlaced)
	if err := _OrderMatching.contract.UnpackLog(event, "BidPlaced", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// OrderMatchingOrderCreatedIterator is returned from FilterOrderCreated and is used to iterate over the raw logs and unpacked data for OrderCreated events raised by the OrderMatching contract.
type OrderMatchingOrderCreatedIterator struct {
	Event *OrderMatchingOrderCreated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *OrderMatchingOrderCreatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(OrderMatchingOrderCreated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(OrderMatchingOrderCreated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *OrderMatchingOrderCreatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *OrderMatchingOrderCreatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// OrderMatchingOrderCreated represents a OrderCreated event raised by the OrderMatching contract.
type OrderMatchingOrderCreated struct {
	OrderId uint64
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterOrderCreated is a free log retrieval operation binding the contract event 0xedcc895bbb0933b024b35f376f6d52ad824c61c10d6c463841fc61daf47e37de.
//
// Solidity: event OrderCreated(uint64 orderId)
func (_OrderMatching *OrderMatchingFilterer) FilterOrderCreated(opts *bind.FilterOpts) (*OrderMatchingOrderCreatedIterator, error) {

	logs, sub, err := _OrderMatching.contract.FilterLogs(opts, "OrderCreated")
	if err != nil {
		return nil, err
	}
	return &OrderMatchingOrderCreatedIterator{contract: _OrderMatching.contract, event: "OrderCreated", logs: logs, sub: sub}, nil
}

// WatchOrderCreated is a free log subscription operation binding the contract event 0xedcc895bbb0933b024b35f376f6d52ad824c61c10d6c463841fc61daf47e37de.
//
// Solidity: event OrderCreated(uint64 orderId)
func (_OrderMatching *OrderMatchingFilterer) WatchOrderCreated(opts *bind.WatchOpts, sink chan<- *OrderMatchingOrderCreated) (event.Subscription, error) {

	logs, sub, err := _OrderMatching.contract.WatchLogs(opts, "OrderCreated")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(OrderMatchingOrderCreated)
				if err := _OrderMatching.contract.UnpackLog(event, "OrderCreated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOrderCreated is a log parse operation binding the contract event 0xedcc895bbb0933b024b35f376f6d52ad824c61c10d6c463841fc61daf47e37de.
//
// Solidity: event OrderCreated(uint64 orderId)
func (_OrderMatching *OrderMatchingFilterer) ParseOrderCreated(log types.Log) (*OrderMatchingOrderCreated, error) {
	event := new(OrderMatchingOrderCreated)
	if err := _OrderMatching.contract.UnpackLog(event, "OrderCreated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// OrderMatchingOrderMatchedIterator is returned from FilterOrderMatched and is used to iterate over the raw logs and unpacked data for OrderMatched events raised by the OrderMatching contract.
type OrderMatchingOrderMatchedIterator struct {
	Event *OrderMatchingOrderMatched // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *OrderMatchingOrderMatchedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(OrderMatchingOrderMatched)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(OrderMatchingOrderMatched)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *OrderMatchingOrderMatchedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *OrderMatchingOrderMatchedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// OrderMatchingOrderMatched represents a OrderMatched event raised by the OrderMatching contract.
type OrderMatchingOrderMatched struct {
	OrderId         uint64
	ProviderAddress common.Address
	ProviderId      *big.Int
	AcceptedPrice   *big.Int
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterOrderMatched is a free log retrieval operation binding the contract event 0xf50b3cb342f0081a2c26e7b8816717154b65d850ef73d68a185a3613c719f7b4.
//
// Solidity: event OrderMatched(uint64 orderId, address providerAddress, uint256 providerId, uint256 acceptedPrice)
func (_OrderMatching *OrderMatchingFilterer) FilterOrderMatched(opts *bind.FilterOpts) (*OrderMatchingOrderMatchedIterator, error) {

	logs, sub, err := _OrderMatching.contract.FilterLogs(opts, "OrderMatched")
	if err != nil {
		return nil, err
	}
	return &OrderMatchingOrderMatchedIterator{contract: _OrderMatching.contract, event: "OrderMatched", logs: logs, sub: sub}, nil
}

// WatchOrderMatched is a free log subscription operation binding the contract event 0xf50b3cb342f0081a2c26e7b8816717154b65d850ef73d68a185a3613c719f7b4.
//
// Solidity: event OrderMatched(uint64 orderId, address providerAddress, uint256 providerId, uint256 acceptedPrice)
func (_OrderMatching *OrderMatchingFilterer) WatchOrderMatched(opts *bind.WatchOpts, sink chan<- *OrderMatchingOrderMatched) (event.Subscription, error) {

	logs, sub, err := _OrderMatching.contract.WatchLogs(opts, "OrderMatched")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(OrderMatchingOrderMatched)
				if err := _OrderMatching.contract.UnpackLog(event, "OrderMatched", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOrderMatched is a log parse operation binding the contract event 0xf50b3cb342f0081a2c26e7b8816717154b65d850ef73d68a185a3613c719f7b4.
//
// Solidity: event OrderMatched(uint64 orderId, address providerAddress, uint256 providerId, uint256 acceptedPrice)
func (_OrderMatching *OrderMatchingFilterer) ParseOrderMatched(log types.Log) (*OrderMatchingOrderMatched, error) {
	event := new(OrderMatchingOrderMatched)
	if err := _OrderMatching.contract.UnpackLog(event, "OrderMatched", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
